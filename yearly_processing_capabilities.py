#!/usr/bin/env python3
"""
–ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢: –í–û–ó–ú–û–ñ–ù–û–°–¢–ò –û–ë–†–ê–ë–û–¢–ö–ò –ì–û–î–û–í–´–• –î–ê–ù–ù–´–•
–°–≤–æ–¥–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–æ—Å–ª–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∑–∞–¥–µ—Ä–∂–µ–∫
"""

import logging
from datetime import datetime, timedelta

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def generate_yearly_capabilities_report():
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏—Ç–æ–≥–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º"""

    logger.info("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢: –í–û–ó–ú–û–ñ–ù–û–°–¢–ò –û–ë–†–ê–ë–û–¢–ö–ò –ì–û–î–û–í–´–• –î–ê–ù–ù–´–•")
    logger.info("=" * 70)
    logger.info("–ü–æ—Å–ª–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∑–∞–¥–µ—Ä–∂–µ–∫ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏")
    logger.info("")

    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ—Å–ª–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
    wb_config = {
        'chunk_size': 45,
        'apis_per_chunk': 2,  # Sales + Orders
        'delays': {
            'year': 8.0,
            'half_year': 5.0,
            'quarter': 3.5,
            'month': 2.5,
            'short': 2.0
        }
    }

    ozon_config = {
        'chunk_size': 60,
        'apis_per_chunk': 1,  # –¢–æ–ª—å–∫–æ FBS (–≤–∫–ª—é—á–∞–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ)
        'delays': {
            'year': 4.0,
            'half_year': 3.0,
            'quarter': 2.5,
            'short': 2.0
        }
    }

    # –ê–Ω–∞–ª–∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø–µ—Ä–∏–æ–¥–æ–≤
    periods = [
        (365, "–ü–æ–ª–Ω—ã–π –≥–æ–¥", "year"),
        (270, "9 –º–µ—Å—è—Ü–µ–≤", "half_year"),
        (180, "–ü–æ–ª—É–≥–æ–¥–∏–µ", "half_year"),
        (90, "–ö–≤–∞—Ä—Ç–∞–ª", "quarter"),
        (60, "2 –º–µ—Å—è—Ü–∞", "short"),
        (30, "–ú–µ—Å—è—Ü", "short")
    ]

    logger.info("üü£ WILDBERRIES API (–ø–æ—Å–ª–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏):")
    logger.info("=" * 50)

    wb_results = []
    for days, description, delay_type in periods:
        chunks = (days + wb_config['chunk_size'] - 1) // wb_config['chunk_size']
        requests = chunks * wb_config['apis_per_chunk']
        delay = wb_config['delays'][delay_type]
        time_minutes = (requests * delay) / 60

        # –û—Ü–µ–Ω–∫–∞ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
        if time_minutes < 1:
            reliability = "–û–¢–õ–ò–ß–ù–û"
        elif time_minutes < 3:
            reliability = "–•–û–†–û–®–û"
        elif time_minutes < 5:
            reliability = "–î–û–ü–£–°–¢–ò–ú–û"
        else:
            reliability = "–û–°–¢–û–†–û–ñ–ù–û"

        wb_results.append({
            'days': days,
            'description': description,
            'chunks': chunks,
            'requests': requests,
            'delay': delay,
            'time_minutes': time_minutes,
            'reliability': reliability
        })

        logger.info(f"üìÖ {description:12s} ({days:3d} –¥–Ω–µ–π):")
        logger.info(f"   –ß–∞–Ω–∫–æ–≤: {chunks:2d} | –ó–∞–ø—Ä–æ—Å–æ–≤: {requests:2d} | –ó–∞–¥–µ—Ä–∂–∫–∞: {delay:.1f}s")
        logger.info(f"   –í—Ä–µ–º—è: {time_minutes:4.1f} –º–∏–Ω | –ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å: {reliability}")
        logger.info("")

    logger.info("üü¶ OZON API (–ø–æ—Å–ª–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏):")
    logger.info("=" * 50)

    ozon_results = []
    for days, description, delay_type in periods:
        chunks = (days + ozon_config['chunk_size'] - 1) // ozon_config['chunk_size']
        requests = chunks * ozon_config['apis_per_chunk']
        delay = ozon_config['delays'][delay_type]
        time_minutes = (requests * delay) / 60

        # –û—Ü–µ–Ω–∫–∞ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
        if time_minutes < 0.5:
            reliability = "–û–¢–õ–ò–ß–ù–û"
        elif time_minutes < 1:
            reliability = "–•–û–†–û–®–û"
        elif time_minutes < 2:
            reliability = "–î–û–ü–£–°–¢–ò–ú–û"
        else:
            reliability = "–û–°–¢–û–†–û–ñ–ù–û"

        ozon_results.append({
            'days': days,
            'description': description,
            'chunks': chunks,
            'requests': requests,
            'delay': delay,
            'time_minutes': time_minutes,
            'reliability': reliability
        })

        logger.info(f"üìÖ {description:12s} ({days:3d} –¥–Ω–µ–π):")
        logger.info(f"   –ß–∞–Ω–∫–æ–≤: {chunks:2d} | –ó–∞–ø—Ä–æ—Å–æ–≤: {requests:2d} | –ó–∞–¥–µ—Ä–∂–∫–∞: {delay:.1f}s")
        logger.info(f"   –í—Ä–µ–º—è: {time_minutes:4.1f} –º–∏–Ω | –ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å: {reliability}")
        logger.info("")

    # –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞
    logger.info("‚öñÔ∏è  –°–†–ê–í–ù–ò–¢–ï–õ–¨–ù–ê–Ø –¢–ê–ë–õ–ò–¶–ê:")
    logger.info("=" * 70)
    logger.info(f"{'–ü–µ—Ä–∏–æ–¥':12s} | {'WB –≤—Ä–µ–º—è':8s} | {'Ozon –≤—Ä–µ–º—è':9s} | {'–ü–æ–±–µ–¥–∏—Ç–µ–ª—å':10s}")
    logger.info("-" * 70)

    for i, (days, description, _) in enumerate(periods):
        wb_time = wb_results[i]['time_minutes']
        ozon_time = ozon_results[i]['time_minutes']

        if ozon_time < wb_time:
            winner = "OZON"
            advantage = wb_time - ozon_time
        else:
            winner = "WB"
            advantage = ozon_time - wb_time

        logger.info(f"{description:12s} | {wb_time:6.1f} –º–∏–Ω | {ozon_time:7.1f} –º–∏–Ω | {winner:10s}")

    logger.info("")

    # –ö–ª—é—á–µ–≤—ã–µ –≤—ã–≤–æ–¥—ã
    logger.info("üéØ –ö–õ–Æ–ß–ï–í–´–ï –í–´–í–û–î–´:")
    logger.info("")

    # –ì–æ–¥–æ–≤–æ–π –ø–µ—Ä–∏–æ–¥
    wb_year = next(r for r in wb_results if r['days'] == 365)
    ozon_year = next(r for r in ozon_results if r['days'] == 365)

    logger.info("üìÖ –ì–û–î–û–í–û–ô –ü–ï–†–ò–û–î (365 –¥–Ω–µ–π):")
    logger.info(f"   WB:   {wb_year['chunks']} —á–∞–Ω–∫–æ–≤, {wb_year['time_minutes']:.1f} –º–∏–Ω ({wb_year['reliability']})")
    logger.info(f"   Ozon: {ozon_year['chunks']} —á–∞–Ω–∫–æ–≤, {ozon_year['time_minutes']:.1f} –º–∏–Ω ({ozon_year['reliability']})")

    if ozon_year['time_minutes'] < wb_year['time_minutes']:
        logger.info(f"   üèÜ OZON –±—ã—Å—Ç—Ä–µ–µ –Ω–∞ {wb_year['time_minutes'] - ozon_year['time_minutes']:.1f} –º–∏–Ω—É—Ç")

    logger.info("")

    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    logger.info("‚úÖ –ü–†–ê–ö–¢–ò–ß–ï–°–ö–ò–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    logger.info("")

    logger.info("üü£ –î–õ–Ø WILDBERRIES:")
    logger.info("   üìÖ –ú–∞–∫—Å–∏–º—É–º: 365 –¥–Ω–µ–π (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω–æ –º–µ–¥–ª–µ–Ω–Ω–æ)")
    logger.info("   üìÖ –û–ø—Ç–∏–º—É–º: 90 –¥–Ω–µ–π (–±—ã—Å—Ç—Ä–æ –∏ –Ω–∞–¥–µ–∂–Ω–æ)")
    logger.info("   üìÖ –ï–∂–µ–¥–Ω–µ–≤–Ω–æ: 30 –¥–Ω–µ–π (–º–≥–Ω–æ–≤–µ–Ω–Ω–æ)")
    logger.info("")

    logger.info("üü¶ –î–õ–Ø OZON:")
    logger.info("   üìÖ –ú–∞–∫—Å–∏–º—É–º: 365 –¥–Ω–µ–π (–ª–µ–≥–∫–æ –∏ –±—ã—Å—Ç—Ä–æ)")
    logger.info("   üìÖ –û–ø—Ç–∏–º—É–º: 120 –¥–Ω–µ–π (–ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ)")
    logger.info("   üìÖ –ï–∂–µ–¥–Ω–µ–≤–Ω–æ: 60 –¥–Ω–µ–π (–±–µ–∑ –∑–∞–¥–µ—Ä–∂–µ–∫)")
    logger.info("")

    # –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤
    logger.info("üöÄ –°–¢–†–ê–¢–ï–ì–ò–ò –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø:")
    logger.info("")

    logger.info("1Ô∏è‚É£  –ë–´–°–¢–†–´–ï –ï–ñ–ï–î–ù–ï–í–ù–´–ï –û–¢–ß–ï–¢–´:")
    logger.info("   ‚Ä¢ WB: 30 –¥–Ω–µ–π (~0.2 –º–∏–Ω)")
    logger.info("   ‚Ä¢ Ozon: 60 –¥–Ω–µ–π (~0.1 –º–∏–Ω)")
    logger.info("   ‚Ä¢ –û–±—â–µ–µ –≤—Ä–µ–º—è: ~0.3 –º–∏–Ω—É—Ç—ã")
    logger.info("")

    logger.info("2Ô∏è‚É£  –ö–í–ê–†–¢–ê–õ–¨–ù–´–ï –û–¢–ß–ï–¢–´:")
    logger.info("   ‚Ä¢ WB: 90 –¥–Ω–µ–π (~0.4 –º–∏–Ω)")
    logger.info("   ‚Ä¢ Ozon: 90 –¥–Ω–µ–π (~0.1 –º–∏–Ω)")
    logger.info("   ‚Ä¢ –û–±—â–µ–µ –≤—Ä–µ–º—è: ~0.5 –º–∏–Ω—É—Ç")
    logger.info("")

    logger.info("3Ô∏è‚É£  –ì–û–î–û–í–´–ï –û–¢–ß–ï–¢–´:")
    logger.info("   –í–∞—Ä–∏–∞–Ω—Ç A (–ø—Ä—è–º–æ):")
    logger.info("   ‚Ä¢ WB: 365 –¥–Ω–µ–π (~2.4 –º–∏–Ω)")
    logger.info("   ‚Ä¢ Ozon: 365 –¥–Ω–µ–π (~0.5 –º–∏–Ω)")
    logger.info("   ‚Ä¢ –û–±—â–µ–µ –≤—Ä–µ–º—è: ~3 –º–∏–Ω—É—Ç—ã")
    logger.info("")
    logger.info("   –í–∞—Ä–∏–∞–Ω—Ç B (–ø–æ –∫–≤–∞—Ä—Ç–∞–ª–∞–º):")
    logger.info("   ‚Ä¢ 4 √ó (WB 90 –¥–Ω–µ–π + Ozon 90 –¥–Ω–µ–π)")
    logger.info("   ‚Ä¢ 4 √ó 0.5 –º–∏–Ω = 2 –º–∏–Ω—É—Ç—ã")
    logger.info("   ‚Ä¢ –ù–∞–¥–µ–∂–Ω–µ–µ –∏ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø–∞—É–∑—ã")
    logger.info("")

    # –§–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    logger.info("üèÜ –ò–¢–û–ì–û–í–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    logger.info("")
    logger.info("   ‚úÖ –ì–û–î –í–û–ó–ú–û–ñ–ï–ù –¥–ª—è –æ–±–µ–∏—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º!")
    logger.info("   ‚úÖ Ozon –ª—É—á—à–µ –¥–ª—è –±–æ–ª—å—à–∏—Ö –ø–µ—Ä–∏–æ–¥–æ–≤")
    logger.info("   ‚úÖ WB —Ç—Ä–µ–±—É–µ—Ç –±–æ–ª—å—à–µ —Ç–µ—Ä–ø–µ–Ω–∏—è, –Ω–æ —Ç–æ–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    logger.info("   ‚úÖ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–æ—ç—Ç–∞–ø–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏")
    logger.info("")

    logger.info("üí° –ó–û–õ–û–¢–û–ï –ü–†–ê–í–ò–õ–û:")
    logger.info("   –ß–µ–º –±–æ–ª—å—à–µ –ø–µ—Ä–∏–æ–¥ - —Ç–µ–º –±–æ–ª—å—à–µ –∑–∞–¥–µ—Ä–∂–∫–∞")
    logger.info("   –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±–µ—Ä–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω—É—é –∑–∞–¥–µ—Ä–∂–∫—É")
    logger.info("   –ì–æ–¥ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è ~3 –º–∏–Ω—É—Ç—ã –¥–ª—è –æ–±–µ–∏—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º")

    return {
        'wb_results': wb_results,
        'ozon_results': ozon_results,
        'year_wb_time': wb_year['time_minutes'],
        'year_ozon_time': ozon_year['time_minutes'],
        'total_year_time': wb_year['time_minutes'] + ozon_year['time_minutes']
    }

if __name__ == "__main__":
    report = generate_yearly_capabilities_report()