#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏
"""

import json
import asyncio

async def debug_cost_calculation():
    """–û—Ç–ª–∞–¥–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏"""
    print("üîç –û–¢–õ–ê–î–ö–ê –†–ê–°–ß–ï–¢–ê –°–ï–ë–ï–°–¢–û–ò–ú–û–°–¢–ò")
    print("=" * 50)

    # 1. –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–¥–∞–∂–∞—Ö
    print("üìä –î–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥–∞–∂ WB:")
    with open('reports/wb_sales_20250920.json', 'r', encoding='utf-8') as f:
        wb_sales = json.load(f)

    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø—Ä–æ–¥–∞–∂–∏ –ø–æ –∞—Ä—Ç–∏–∫—É–ª–∞–º
    sales_by_sku = {}
    total_sold_units = 0

    for sale in wb_sales:
        if sale.get('isRealization'):  # –¢–æ–ª—å–∫–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ
            sku = sale.get('supplierArticle', 'Unknown')
            price = sale.get('priceWithDisc', 0)

            if sku not in sales_by_sku:
                sales_by_sku[sku] = {'count': 0, 'revenue': 0}

            sales_by_sku[sku]['count'] += 1
            sales_by_sku[sku]['revenue'] += price
            total_sold_units += 1

    print(f"  –í—Å–µ–≥–æ –ø—Ä–æ–¥–∞–Ω–æ –µ–¥–∏–Ω–∏—Ü WB: {total_sold_units}")
    print("\n  –¢–æ–ø-5 –ø—Ä–æ–¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ WB:")
    top_wb = sorted(sales_by_sku.items(), key=lambda x: x[1]['count'], reverse=True)[:5]
    for sku, data in top_wb:
        print(f"    {sku}: {data['count']} —à—Ç, {data['revenue']:.0f} ‚ÇΩ")

    # 2. –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–¥–∞–∂–∞—Ö Ozon
    print("\nüìä –î–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥–∞–∂ Ozon:")
    from api_clients.ozon.sales_client import OzonSalesClient
    from datetime import datetime

    sales_client = OzonSalesClient()
    date_from = datetime.strptime("2025-09-13", '%Y-%m-%d').date()
    date_to = datetime.strptime("2025-09-20", '%Y-%m-%d').date()

    ozon_transactions = await sales_client.get_transactions(date_from, date_to)

    ozon_sales_by_sku = {}
    ozon_sold_units = 0

    for transaction in ozon_transactions:
        if transaction.get('operation_type') == 'OperationDeliveryCharge':
            sku = transaction.get('posting', {}).get('sku')
            amount = abs(float(transaction.get('amount', 0)))

            if sku and sku not in ozon_sales_by_sku:
                ozon_sales_by_sku[sku] = {'count': 0, 'revenue': 0}

            if sku:
                ozon_sales_by_sku[sku]['count'] += 1
                ozon_sales_by_sku[sku]['revenue'] += amount
                ozon_sold_units += 1

    print(f"  –í—Å–µ–≥–æ –ø—Ä–æ–¥–∞–Ω–æ –µ–¥–∏–Ω–∏—Ü Ozon: {ozon_sold_units}")
    print("\n  –¢–æ–ø-5 –ø—Ä–æ–¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ Ozon:")
    top_ozon = sorted(ozon_sales_by_sku.items(), key=lambda x: x[1]['count'], reverse=True)[:5]
    for sku, data in top_ozon:
        print(f"    {sku}: {data['count']} —à—Ç, {data['revenue']:.0f} ‚ÇΩ")

    # 3. –ó–∞–≥—Ä—É–∂–∞–µ–º —à–∞–±–ª–æ–Ω —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏
    print("\nüí∞ –ê–Ω–∞–ª–∏–∑ —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏:")
    with open('cost_data/cost_data_20250920_010807.json', 'r', encoding='utf-8') as f:
        cost_data = json.load(f)

    sku_costs = cost_data.get('sku_costs', {})

    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
    print(f"\nüîç –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–æ–¥–∞–∂ –∏ —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏:")
    total_calculated_cost = 0
    matched_units = 0
    unmatched_skus = []

    # WB —Ç–æ–≤–∞—Ä—ã
    print("\n  WB —Ç–æ–≤–∞—Ä—ã:")
    for sku, sale_data in sales_by_sku.items():
        wb_key = f"WB_{sku}"
        if wb_key in sku_costs:
            cost_per_unit = sku_costs[wb_key]['cost_per_unit']
            total_cost = cost_per_unit * sale_data['count']
            total_calculated_cost += total_cost
            matched_units += sale_data['count']
            print(f"    ‚úÖ {sku}: {sale_data['count']} —à—Ç √ó {cost_per_unit} ‚ÇΩ = {total_cost:.0f} ‚ÇΩ")
        else:
            unmatched_skus.append(f"WB_{sku}")
            print(f"    ‚ùå {sku}: {sale_data['count']} —à—Ç - –ù–ï–¢ –≤ —à–∞–±–ª–æ–Ω–µ!")

    # Ozon —Ç–æ–≤–∞—Ä—ã
    print("\n  Ozon —Ç–æ–≤–∞—Ä—ã:")
    for sku, sale_data in ozon_sales_by_sku.items():
        if not sku:
            continue

        ozon_key = f"Ozon_{sku}"
        if ozon_key in sku_costs:
            cost_per_unit = sku_costs[ozon_key]['cost_per_unit']
            total_cost = cost_per_unit * sale_data['count']
            total_calculated_cost += total_cost
            matched_units += sale_data['count']
            print(f"    ‚úÖ {sku}: {sale_data['count']} —à—Ç √ó {cost_per_unit} ‚ÇΩ = {total_cost:.0f} ‚ÇΩ")
        else:
            unmatched_skus.append(f"Ozon_{sku}")
            print(f"    ‚ùå {sku}: {sale_data['count']} —à—Ç - –ù–ï–¢ –≤ —à–∞–±–ª–æ–Ω–µ!")

    # 5. –ò—Ç–æ–≥–∏
    print(f"\nüìã –ò–¢–û–ì–ò:")
    print(f"  –í—Å–µ–≥–æ –ø—Ä–æ–¥–∞–Ω–æ –µ–¥–∏–Ω–∏—Ü: {total_sold_units + ozon_sold_units}")
    print(f"  –ù–∞–π–¥–µ–Ω–æ –≤ —à–∞–±–ª–æ–Ω–µ: {matched_units} –µ–¥–∏–Ω–∏—Ü")
    print(f"  –ù–µ –Ω–∞–π–¥–µ–Ω–æ: {total_sold_units + ozon_sold_units - matched_units} –µ–¥–∏–Ω–∏—Ü")
    print(f"  –†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω–∞—è —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å: {total_calculated_cost:.2f} ‚ÇΩ")
    print(f"  –°—Ä–µ–¥–Ω—è—è —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ –µ–¥–∏–Ω–∏—Ü—É: {total_calculated_cost/matched_units:.2f} ‚ÇΩ" if matched_units > 0 else "  –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")

    if unmatched_skus:
        print(f"\n‚ùå –¢–æ–≤–∞—Ä—ã –ë–ï–ó —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏ ({len(unmatched_skus)}):")
        for sku in unmatched_skus[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
            print(f"    {sku}")
        if len(unmatched_skus) > 10:
            print(f"    ... –∏ –µ—â–µ {len(unmatched_skus) - 10}")

    return total_calculated_cost, matched_units

if __name__ == "__main__":
    cost, units = asyncio.run(debug_cost_calculation())
    print(f"\nüéØ –ü–†–û–ë–õ–ï–ú–ê: –ù–∞ {units} –µ–¥–∏–Ω–∏—Ü —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å {cost:.0f} ‚ÇΩ = {cost/units:.0f} ‚ÇΩ/—à—Ç" if units > 0 else "\n‚ùå –ù–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π!")