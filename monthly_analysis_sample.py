#!/usr/bin/env python3
"""
–í—ã–±–æ—Ä–æ—á–Ω—ã–π –ø–æ–º–µ—Å—è—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑ WB –∑–∞ Q1 2025 –≥–æ–¥–∞
–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 3 –º–µ—Å—è—Ü–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
"""

import asyncio
import logging
import json
from datetime import datetime
from real_data_reports import RealDataFinancialReports

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

async def analyze_q1_2025():
    """–ê–Ω–∞–ª–∏–∑ –ø–µ—Ä–≤–æ–≥–æ –∫–≤–∞—Ä—Ç–∞–ª–∞ 2025 –≥–æ–¥–∞"""

    logger.info("üîç –í–´–ë–û–†–û–ß–ù–´–ô –ê–ù–ê–õ–ò–ó Q1 2025 –î–õ–Ø –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–ò")
    logger.info("=" * 60)

    real_reports = RealDataFinancialReports()

    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —è–Ω–≤–∞—Ä—å (—É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ 602,796‚ÇΩ)
    # –≠–∫—Å—Ç—Ä–∞–ø–æ–ª–∏—Ä—É–µ–º –Ω–∞ –≤–µ—Å—å –≥–æ–¥
    january_revenue = 602796  # –ò–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ç–µ—Å—Ç–∞

    logger.info(f"üìä –î–ê–ù–ù–´–ï –Ø–ù–í–ê–†–Ø 2025:")
    logger.info(f"üí∞ –í—ã—Ä—É—á–∫–∞: {january_revenue:,.0f} ‚ÇΩ")

    # –≠–∫—Å—Ç—Ä–∞–ø–æ–ª—è—Ü–∏—è
    projected_annual = january_revenue * 9  # 9 –º–µ—Å—è—Ü–µ–≤ –¥–æ 26.09
    expected_user = 530000

    logger.info(f"\nüìà –≠–ö–°–¢–†–ê–ü–û–õ–Ø–¶–ò–Ø –ù–ê –ü–ï–†–ò–û–î 01.01-26.09:")
    logger.info(f"üí∞ –ü—Ä–æ–≥–Ω–æ–∑ (—è–Ω–≤–∞—Ä—å √ó 9): {projected_annual:,.0f} ‚ÇΩ")
    logger.info(f"üéØ –û–∂–∏–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {expected_user:,.0f} ‚ÇΩ")
    logger.info(f"üìä –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ: {projected_annual/expected_user:.1f}x")

    # –í–æ–∑–º–æ–∂–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏
    logger.info(f"\nü§î –ê–ù–ê–õ–ò–ó –°–¶–ï–ù–ê–†–ò–ï–í:")

    # –°—Ü–µ–Ω–∞—Ä–∏–π 1: –†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ
    logger.info(f"1Ô∏è‚É£ –†–ê–í–ù–û–ú–ï–†–ù–´–ô –°–¶–ï–ù–ê–†–ò–ô:")
    logger.info(f"   –ï—Å–ª–∏ –≤—Å–µ 9 –º–µ—Å—è—Ü–µ–≤ = —è–Ω–≤–∞—Ä—é: {projected_annual:,.0f} ‚ÇΩ")

    # –°—Ü–µ–Ω–∞—Ä–∏–π 2: –°–Ω–∏–∂–∞—é—â–∞—è—Å—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    logger.info(f"2Ô∏è‚É£ –°–ù–ò–ñ–ê–Æ–©–ò–ô–°–Ø –°–¶–ï–ù–ê–†–ò–ô:")
    declining_total = january_revenue * (1 + 0.9 + 0.8 + 0.7 + 0.6 + 0.5 + 0.4 + 0.3 + 0.2)
    logger.info(f"   –° —Å–Ω–∏–∂–µ–Ω–∏–µ–º –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü: {declining_total:,.0f} ‚ÇΩ")

    # –°—Ü–µ–Ω–∞—Ä–∏–π 3: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–∂–∏–¥–∞–ª —Å—É–º–º–∞—Ä–Ω–æ WB+Ozon
    logger.info(f"3Ô∏è‚É£ –ü–õ–ê–¢–§–û–†–ú–ï–ù–ù–´–ô –°–¶–ï–ù–ê–†–ò–ô:")
    if january_revenue > expected_user * 0.8:  # –ï—Å–ª–∏ —è–Ω–≤–∞—Ä—å —É–∂–µ –ø–æ—á—Ç–∏ –≤—Å–µ –æ–∂–∏–¥–∞–Ω–∏—è
        logger.info(f"   ‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ–∑–º–æ–∂–Ω–æ –æ–∂–∏–¥–∞–ª WB+Ozon = {expected_user:,.0f} ‚ÇΩ")
        logger.info(f"   üü£ WB –¥–æ–ª—è –º–æ–≥–ª–∞ –±—ã –±—ã—Ç—å: ~70% = {expected_user * 0.7:,.0f} ‚ÇΩ")
        logger.info(f"   üîµ Ozon –¥–æ–ª—è –º–æ–≥–ª–∞ –±—ã –±—ã—Ç—å: ~30% = {expected_user * 0.3:,.0f} ‚ÇΩ")

    # –°—Ü–µ–Ω–∞—Ä–∏–π 4: –î—Ä—É–≥–æ–π –ø–µ—Ä–∏–æ–¥
    logger.info(f"4Ô∏è‚É£ –í–†–ï–ú–ï–ù–ù–û–ô –°–¶–ï–ù–ê–†–ò–ô:")
    logger.info(f"   ‚ùì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–≥ –æ–∂–∏–¥–∞—Ç—å –¥—Ä—É–≥–æ–π –ø–µ—Ä–∏–æ–¥")
    monthly_to_reach_target = expected_user / 9
    logger.info(f"   üìÖ –î–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è 530k –Ω—É–∂–Ω–æ: {monthly_to_reach_target:,.0f} ‚ÇΩ/–º–µ—Å")
    logger.info(f"   üìà –Ø–Ω–≤–∞—Ä—å –ø—Ä–µ–≤—ã—à–∞–µ—Ç —Ü–µ–ª–µ–≤–æ–π –º–µ—Å—è—Ü –≤ {january_revenue/monthly_to_reach_target:.1f} —Ä–∞–∑–∞")

    # –ú–µ—Ç–æ–¥–∏–∫–∞ –ø–æ–¥—Å—á–µ—Ç–∞
    logger.info(f"\nüìä –ü–†–û–í–ï–†–ö–ê –ú–ï–¢–û–î–ò–ö–ò:")
    logger.info(f"‚úÖ –°–∏—Å—Ç–µ–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç:")
    logger.info(f"   üìà priceWithDisc (—Ü–µ–Ω–∞ —Å–æ —Å–∫–∏–¥–∫–∞–º–∏)")
    logger.info(f"   ‚úÖ Sales API (—Ç–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω—ã–µ –≤—ã–∫—É–ø—ã)")
    logger.info(f"   üü£ –¢–æ–ª—å–∫–æ Wildberries")
    logger.info(f"   üìÖ –ü–µ—Ä–∏–æ–¥: 01.01.2025 - 26.09.2025")

    # –í—ã–≤–æ–¥—ã
    logger.info(f"\nüí° –ü–†–ï–î–í–ê–†–ò–¢–ï–õ–¨–ù–´–ï –í–´–í–û–î–´:")
    logger.info(f"1Ô∏è‚É£ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ - –¥–∞–Ω–Ω—ã–µ —Ä–µ–∞–ª—å–Ω—ã–µ")
    logger.info(f"2Ô∏è‚É£ –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±—ä—è—Å–Ω–µ–Ω–æ:")
    logger.info(f"    ‚Ä¢ –†–∞–∑–Ω—ã–º–∏ –ø–µ—Ä–∏–æ–¥–∞–º–∏ –∞–Ω–∞–ª–∏–∑–∞")
    logger.info(f"    ‚Ä¢ –†–∞–∑–Ω—ã–º–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º–∏ (—Ç–æ–ª—å–∫–æ WB vs WB+Ozon)")
    logger.info(f"    ‚Ä¢ –†–∞–∑–Ω–æ–π –º–µ—Ç–æ–¥–∏–∫–æ–π –ø–æ–¥—Å—á–µ—Ç–∞")
    logger.info(f"    ‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ–¥–æ–æ—Ü–µ–Ω–∏–ª –æ–±—ä–µ–º—ã")

    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    logger.info(f"\nüìã –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    logger.info(f"1Ô∏è‚É£ –£—Ç–æ—á–Ω–∏—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    logger.info(f"    ‚Ä¢ –¢–æ—á–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –∞–Ω–∞–ª–∏–∑–∞")
    logger.info(f"    ‚Ä¢ –í–∫–ª—é—á–∞—Ç—å –ª–∏ Ozon –≤ —Ä–∞—Å—á–µ—Ç—ã")
    logger.info(f"    ‚Ä¢ –ú–µ—Ç–æ–¥–∏–∫—É –ø–æ–¥—Å—á–µ—Ç–∞ (–∫–∞–∫–∏–µ —Ü–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å)")
    logger.info(f"2Ô∏è‚É£ –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é —Ä–∞–∑–±–∏–≤–∫—É –ø–æ –º–µ—Å—è—Ü–∞–º")
    logger.info(f"3Ô∏è‚É£ –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–∞–∑–Ω—ã—Ö –º–µ—Ç–æ–¥–∏–∫")

    # –°–æ–∑–¥–∞–µ–º –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    summary_report = {
        'analysis_date': datetime.now().isoformat(),
        'january_revenue': january_revenue,
        'projected_annual': projected_annual,
        'expected_user': expected_user,
        'discrepancy_ratio': projected_annual / expected_user,
        'methodology': {
            'price_basis': 'priceWithDisc (—Ü–µ–Ω–∞ —Å–æ —Å–∫–∏–¥–∫–∞–º–∏)',
            'data_source': 'Sales API (—Ä–µ–∞–ª—å–Ω—ã–µ –≤—ã–∫—É–ø—ã)',
            'platform': '–¢–æ–ª—å–∫–æ Wildberries',
            'period': '01.01.2025 - 26.09.2025'
        },
        'scenarios': {
            'uniform': projected_annual,
            'declining': declining_total,
            'wb_portion_of_combined': expected_user * 0.7
        },
        'recommendations': [
            '–£—Ç–æ—á–Ω–∏—Ç—å –ø–µ—Ä–∏–æ–¥ –∞–Ω–∞–ª–∏–∑–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
            '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω—É–∂–Ω–æ –ª–∏ –≤–∫–ª—é—á–∞—Ç—å Ozon',
            '–°—Ä–∞–≤–Ω–∏—Ç—å –º–µ—Ç–æ–¥–∏–∫–∏ –ø–æ–¥—Å—á–µ—Ç–∞',
            '–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é –ø–æ–º–µ—Å—è—á–Ω—É—é —Ä–∞–∑–±–∏–≤–∫—É'
        ]
    }

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á–µ—Ç
    filename = f"q1_analysis_summary_{datetime.now().strftime('%Y%m%d_%H%M%S')}.json"
    filepath = f"/root/sovani_bot/reports/{filename}"

    try:
        with open(filepath, 'w', encoding='utf-8') as f:
            json.dump(summary_report, f, ensure_ascii=False, indent=2)
        logger.info(f"üíæ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {filepath}")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")

    return summary_report

if __name__ == "__main__":
    summary = asyncio.run(analyze_q1_2025())