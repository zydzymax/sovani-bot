name: CI - Multi-Tenant Security & Tests

on:
  push:
    branches: ['**']
  pull_request:
    branches: [main, master, feature/**, stage/**]

jobs:
  ci:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: 🔒 CRITICAL - Org Scope Guard (Tenant Isolation)
        id: org_scope_guard
        run: |
          chmod +x scripts/ci/check_org_scope.sh
          ./scripts/ci/check_org_scope.sh
        continue-on-error: false  # FAIL CI if tenant isolation violated

      - name: Lint with Ruff
        run: |
          ruff check . --exit-non-zero-on-fix
        continue-on-error: true  # Don't fail CI on lint warnings

      - name: Format check with Ruff
        run: |
          ruff format --check .
        continue-on-error: true

      - name: Type check with mypy (if configured)
        run: |
          if command -v mypy &> /dev/null; then
            mypy app --ignore-missing-imports || true
          else
            echo "mypy not installed, skipping"
          fi
        continue-on-error: true

      - name: Run tests with pytest
        env:
          DATABASE_URL: "sqlite:///./test_ci.db"
          PYTHONPATH: ${{ github.workspace }}
        run: |
          pytest -q --tb=short --maxfail=5
        continue-on-error: false

      - name: Check Alembic migrations
        env:
          DATABASE_URL: "sqlite:///./test_alembic.db"
        run: |
          alembic upgrade head
          alembic check
        continue-on-error: false

      - name: Security Summary
        if: always()
        run: |
          echo "## 🔐 Multi-Tenant Security Status" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.org_scope_guard.outcome }}" == "success" ]; then
            echo "✅ **Org Scope Guard**: PASSED - All SQL queries properly scoped" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Org Scope Guard**: FAILED - Unscoped queries detected!" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Action Required**: Fix org_id filters before merging" >> $GITHUB_STEP_SUMMARY
          fi
